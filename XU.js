

// Ah oh launcho
var first = true;

function submit () {
    resetWear();

    if (first) {
        $('#everythingmaps').css('visibility', 'visible');
        $('#top').show('slow');
    }

    var location = $('#wide').val();
    var days = $('#narrow').val();

    var re = new RegExp('[0-9]{5}');
    var run = true;

    // Check days input
    if ((days < 1) || (days > 10)) {
        run = false;
        inputError(true);
    }

    if (((location === '') || (days === '')) || !run) {
        inputError(true);
    } else {
        LaunchAction(location, days);

        if (first)
            $('#name').hide('slow');

        showMap(location);

        $('#wide').val('');
        $('#narrow').val('');
        inputError(false);
    }
}

var gridTileWidth;
// On load
$(function() {
    $('#top').hide();

    $('html, body').animate({scrollTop: '0px'}, 700, function () {
        // $('body').addClass('stop-scrolling');
    });

    $('#error').hide();
    $('#error').css('background-color', 'crimson');

    var offsetTop = $('#hide').offsetTop;
    $('#hide').css('padding', ''+offsetTop);
});

function inputError (state) {
    if (state) {
        $('#error').show('slow');
        $('#hide').show('slow');

        $('a').addClass('disabled');

        $('html, body').animate({scrollTop: '0px'}, 700, function () {
            $('body').addClass('stop-scrolling');
        });

    } else {
        $('#error').hide('slow');
        $('#hide').hide('slow');
        $('body').removeClass('stop-scrolling');

        $('a').removeClass('disabled');
    }
}

function resetWear () {
    $('#grid').hide('slow');
    $('#packList').hide('slow');

    $('#grid').empty();
    $('#packList').empty();

    $('#grid').show('slow');
    $('#packList').show('slow');
}

// Forecast class
function ForecastObj (data) {
    this.forecastInfo = data.forecast.forecastday;
    this.locationInfo = data.location;

    this.days = this.forecastInfo.length;
    this.dayInfo = [];

    this.clearUpInfo = function (lat) {
        // Day partitioned
        var integralStart = 6, integralEnd = 20;

        for (i = 0; i < this.days; i++) {
            var temp1 = 0, temp2 = 0;
            var cloud1 = 0, cloud2 = 0;
            var wind1 = -100, wind2 = -100;
            var rain1 = 0, rain2 = 0;
            var snow1 = 0, snow2 = 0;
            var high = -1000, low = 1000;
            var cond1 = 0, cond2 = 0;
            var sunRise = '', sunSet = '';

            var extra1 = 0;
            for (k = 0; k < 12; k++) {
                // Temp index
                var heat = this.forecastInfo[i].hour[k].heatindex_f;
                var feel = this.forecastInfo[i].hour[k].feelslike_f;
                var windChill = this.forecastInfo[i].hour[k].windchill_f;

                aggregate = (heat+feel+windChill)/3;

                if (k >= integralStart) {
                    aggregate *= 2;
                    extra1++;

                    // Cloud cover during integral hours
                    cloud1 += this.forecastInfo[i].hour[k].cloud;

                    // Cond
                    cond1 += this.forecastInfo[i].hour[k].condition.code;

                    // Will snow
                    if (this.forecastInfo[i].hour[k].will_it_snow === 1)
                        snow1 = 1;

                    // Max wind
                    if (wind1 < this.forecastInfo[i].hour[k].wind_mph)
                        wind1 = this.forecastInfo[i].hour[k].wind_mph;
                }

                temp1 += aggregate;

                // TODO: Maybe make modification to whether these settings
                // TODO: are calculated for certain hours
                // TODO: Have lat make minor modification for temp index
                // Finding max temp
                if (this.forecastInfo[i].hour[k].wind_mph > wind1)
                    wind1 = this.forecastInfo[i].hour[k].wind_mph;

                // High temp
                if (this.forecastInfo[i].hour[k].temp_f > high)
                    high = this.forecastInfo[i].hour[k].temp_f;

                // Low temp
                if (this.forecastInfo[i].hour[k].temp_f < low)
                    low = this.forecastInfo[i].hour[k].temp_f;

                // Max rain fall
                if (this.forecastInfo[i].hour[k].precip_in > rain1)
                    rain1 = this.forecastInfo[i].hour[k].precip_in;
            }

            var extra2 = 0;
            for (k = 12; k < 24; k++) {
                var heat = this.forecastInfo[i].hour[k].heatindex_f;
                var feel = this.forecastInfo[i].hour[k].feelslike_f;
                var windChill = this.forecastInfo[i].hour[k].windchill_f;

                aggregate = (heat+feel+windChill)/3;

                if (k <= integralEnd) {
                    aggregate *= 2;
                    extra2++;

                    // Cloud cover during integral hours
                    cloud2 += this.forecastInfo[i].hour[k].cloud;

                    // Cond
                    cond2 += this.forecastInfo[i].hour[k].condition.code;

                    // Will snow
                    if (this.forecastInfo[i].hour[k].will_it_snow === 1)
                        snow2 = 1;

                    // Max wind
                    if (wind2 < this.forecastInfo[i].hour[k].wind_mph)
                        wind2 = this.forecastInfo[i].hour[k].wind_mph;
                }

                temp2 += aggregate;

                // Finding max temp
                if (this.forecastInfo[i].hour[k].wind_mph > wind1)
                    wind2 = this.forecastInfo[i].hour[k].wind_mph;

                // High temp
                if (this.forecastInfo[i].hour[k].temp_f > high)
                    high = this.forecastInfo[i].hour[k].temp_f;

                // Low temp
                if (this.forecastInfo[i].hour[k].temp_f < low)
                    low = this.forecastInfo[i].hour[k].temp_f;

                // Max rain fall
                if (this.forecastInfo[i].hour[k].precip_in > rain2)
                    rain2 = this.forecastInfo[i].hour[k].precip_in;

            }

            // Temp indexes
            temp1 = Math.ceil(temp1/(12+extra1));
            temp2 = Math.floor(temp2/(12+extra2));

            // Cloud cover
            cloud1 = Math.ceil(cloud1/extra1);
            cloud2 = Math.ceil(cloud2/extra2);

            // Cond
            cond1 = Math.ceil(cond1/extra1);
            cond2 = Math.ceil(cond2/extra2);

            // Sunrise/set
            sunRise = this.forecastInfo[i].astro.sunrise;
            sunSet = this.forecastInfo[i].astro.sunset;

            // Create JSON object
            var thisJSON = {
                "date_epoch" : this.forecastInfo[i].date_epoch,
                "tempIndex" : [temp1, temp2],
                "cloudCover" : [cloud1, cloud2],
                "windSpeed" : [wind1, wind2],
                "rainFall" : [rain1, rain2],
                "snow" : [snow1, snow2],
                "cond" : [cond1, cond2],
                "high" : Math.ceil(high),
                "low" : Math.round(low),
                "sunRise" : sunRise,
                "sunSet" : sunSet
            };

            this.dayInfo.push(thisJSON);
        }
    }

    this.sendToPage = function () {
        $('#grid').empty();

        // Printing info to page
        var conditions = {
            "hot" : "wi-hot",
            "sunny" : "wi-day-sunny",
            "partCloudy" : "wi-day-sunny-overcast",
            "cloudy" : "wi-day-cloudy",
            "overcast" : "wi-cloudy",
            "lightShowers" : "wi-day-sprinkle",
            "rain" : "wi-day-rain",
            "snow" : "wi-day-snow"
        };

        var bring = {
            "HeavyJacket" : false,
            "LightJacket" : false,
            "LongShirt" : 0,
            "TShirt" : 0,
            "Pants" : 0,
            "Shorts" : 0,
            "Sneakers" : false,
            "Boots" : false,
            "UnderWearSocks" : this.days + 1,
            "Toiletries" : true
        };

        var svgs = {
            'HeavyJacket' : '<svg height="26px" width="30px" viewBox="0 0 120 120" xml:space="preserve"><path d="M50.5,90.6c8.2,0,17.5,0.4,24.5,1v3.6c-7-0.5-16.4-0.8-24.5-0.8C42,94.4,33,94.7,25,95.3v-3.6  C32,91,41.9,90.6,50.5,90.6z M78.3,81.1l12.4,6.1l0.6-3l-12.5-6.6L78.3,81.1z M8.9,83.2l0.7,3.7l12.3-6.3l-0.5-4L8.9,83.2z M38.7,5  c0.9,2,2.2,4.3,3.8,6.2c2.6-0.5,5.2-0.5,7.9-0.5c2.5,0,5-0.1,7.4,0.3c1.5-1.9,2.8-4,3.6-6h0c0,0,0.1,0.3,0.2,0.3  c-2.1-1-6.6-1.5-11.4-1.5c-4.7,0-9.2,0.5-11.5,1.4C38.7,5.3,38.7,5,38.7,5L38.7,5z M55.4,17.3c-1.2,1-2.2,1.6-3.1,1.9l3.8,3.8  c0.5-0.1,1.4-0.5,2.8-1.6c3.2-2.7,6.4-7.2,7.8-10.5l-3.1-4.4C61.8,10.4,58.2,14.9,55.4,17.3z M97.4,50.3l-5.7,31.6l-12.6-6.7l3-22.6  c0.3-0.6,0.1-1.3-0.5-1.7l-7-11.3c-0.2-0.2-0.5-0.1-0.6,0.1l0.3,23.2l0.3,12l0,0.3l0.2,14.1c-6.5-0.6-14.7-1-23.7-1V21.5l3.8,3.6  l0.1-0.1l0.1,0l0,0c0.2,0.1,0.5,0.1,0.8,0.1c0,0,0.1,0,0.1,0c0,0,0,0,0,0c1.2,0,2.6-0.7,4.3-2.2c2.8-2.4,6.4-6.9,8.2-10.8  c1.8,0.2,3.3,0.4,4,0.6c0.2,0.1,0.6,0.1,0.6,0.2v0c2,0.3,3.1,1.3,4.3,2.5l19.6,31.3C97.7,47.9,97.9,49.1,97.4,50.3z M72,84.1  c-6,0-9.7-4.1-9.7-8.1h-1.9c0,5,4.6,10,11.6,10V84.1z M56.2,13.5c-1.9-0.2-3.8-0.3-5.7-0.3c-2.1,0-4.2,0.2-6.2,0.5  c0.7,0.7,1.4,1.4,2.1,1.9c1.8,1.4,2.8,1.7,3.1,1.6l0,0l1.6,0l0,0c0.3,0.1,1.3-0.2,3-1.6C54.8,14.9,55.5,14.2,56.2,13.5z M41.5,21.5  c1.4,1.1,2.3,1.5,2.8,1.6l3.8-3.8c-0.9-0.3-2-0.9-3.1-1.9C42,15,38.4,10.6,36.6,6.7l-3,4.5C35,14.4,38.3,18.9,41.5,21.5z M21,74.3  L8.5,81L2.9,50.2c-0.5-1.1-0.3-2.4,0.4-3.4l19.6-31.3c1.1-1.1,2.1-2.1,4.1-2.5v0c0-0.2,1.2-0.4,1.8-0.5c0.7-0.1,1.8-0.2,2.8-0.3  c1.7,4,5.5,8.6,8.5,11c1.7,1.4,3.2,2.1,4.3,2.1c0.3,0,0.5,0,0.8-0.1l0-0.1l0.1,0.1l3.6-3.7l0.1,0v66.9c-8,0-17.3,0.4-23.6,1.1  L26,62.9l0.3-23.1c-0.1-0.1-0.4-0.2-0.6,0l-7,11c-0.5,0.4-0.7,1.1-0.5,1.7L21,74.3z M44.5,30.7c0,0.7,0.5,1.2,1.2,1.2  c0.7,0,1.2-0.5,1.2-1.2s-0.5-1.2-1.2-1.2C45,29.5,44.5,30.1,44.5,30.7z M44.5,40.3c0,0.7,0.5,1.2,1.2,1.2c0.7,0,1.2-0.5,1.2-1.2  c0-0.7-0.5-1.2-1.2-1.2C45,39.1,44.5,39.7,44.5,40.3z M44.5,49.9c0,0.7,0.5,1.2,1.2,1.2c0.7,0,1.2-0.5,1.2-1.2  c0-0.7-0.5-1.2-1.2-1.2C45,48.7,44.5,49.2,44.5,49.9z M44.5,59.5c0,0.7,0.5,1.2,1.2,1.2c0.7,0,1.2-0.5,1.2-1.2  c0-0.7-0.5-1.2-1.2-1.2C45,58.3,44.5,58.8,44.5,59.5z M44.5,69c0,0.7,0.5,1.2,1.2,1.2c0.7,0,1.2-0.5,1.2-1.2s-0.5-1.2-1.2-1.2  C45,67.8,44.5,68.4,44.5,69z M44.5,78.6c0,0.7,0.5,1.2,1.2,1.2c0.7,0,1.2-0.5,1.2-1.2s-0.5-1.2-1.2-1.2C45,77.4,44.5,78,44.5,78.6z   M29,86c6,0,11-5,11-10H38c0,4-4,8.1-9,8.1V86z"/> </svg>',
            'LightJacket' : '<svg height="26px" width="30px" viewBox="0 0 90 90" xml:space="preserve"><path style="" d="m 39.212919,0.69222877 c -0.732366,-0.0097 -1.462296,0.172308 -2.057374,0.54006303 -2.980618,1.842119 -4.815781,5.504431 -5.580623,8.9238582 -0.489882,2.190105 1.737169,4.648559 0.797231,6.686466 -2.243496,4.86417 -10.194711,4.586263 -13.372933,8.898144 -6.992716,9.486969 -5.669987,21.910528 -10.0296997,33.920951 1.3805367,2.610724 5.7781507,3.989363 8.4352337,2.700307 3.395451,-10.755061 7.492183,-20.696057 7.483698,-20.059398 0,0 -0.123193,28.762464 -0.488627,35.824024 15.032825,0.510216 18.02058,2.466984 32.96942,-1.285857 C 56.404693,66.444222 56.700363,64.449964 55.980519,58.787329 l -0.488628,-0.231447 -4.011879,-1.543029 -0.385761,-0.154314 0.154314,-0.385757 c 0,0 0.77892,-1.961512 1.568751,-4.449072 0.789828,-2.487558 1.590248,-5.502674 1.594466,-7.483697 0.0029,-1.485471 -0.590116,-3.78837 -1.182992,-5.683496 -0.592873,-1.895125 -1.18299,-3.394665 -1.18299,-3.394665 l 0.771516,-0.308605 c 0,0 0.606059,1.519735 1.208705,3.446098 0.602648,1.926365 1.212309,4.247454 1.208709,5.940668 -0.0045,2.188768 -0.820446,5.196398 -1.620183,7.715152 -0.73198,2.305365 -1.347219,3.840762 -1.465878,4.140466 l 4.114748,1.774487 0.9001,0.565777 c 2.226928,0.749371 2.474545,0.692089 3.548973,1.080121 3.021861,-16.611164 5.132312,-16.024735 2.211677,-26.437257 -1.709093,-4.097417 -2.942382,-5.911942 -5.889234,-9.232464 -2.304806,-2.597068 -6.864013,-1.743376 -8.02376,-4.886262 -0.129429,0.189096 -0.21466,0.326126 -0.360041,0.540058 -1.69297,2.491281 -4.597779,6.796556 -9.181029,13.090042 -1.087599,14.892688 0,44.567864 0,44.567864 l -0.82295,0.02567 c 0,0 -1.107123,-29.789312 0,-44.7736 l 0,-0.102862 0.07718,-0.102863 c 4.640036,-6.366415 7.550069,-10.65363 9.25818,-13.167194 0.364185,-0.535913 0.638986,-0.958385 0.900103,-1.337293 0.332174,-1.730693 2.498608,-3.288416 2.906041,-5.143432 0.09108,-0.414595 0.168102,-0.89609 0,-1.28586 C 49.737311,6.8143248 45.397814,2.6057028 40.498795,0.92364677 40.101812,0.78733777 39.652357,0.69798377 39.21294,0.69219977 z M 42.813323,7.764453 c 0.223943,-0.018339 0.445723,-0.016005 0.694363,0 1.409883,0.090945 5.925541,2.615747 6.686469,3.806142 0.173832,0.271935 0.208817,0.659143 0.154297,0.977251 -1.265082,2.42697 -3.94024,6.826161 -6.840767,10.338305 -1.115188,0.271851 -0.817353,-1.966986 -1.903073,-1.594464 -2.063221,0.707891 0.09108,6.574803 -2.057373,6.197842 -2.038847,-0.357741 -0.115606,-4.702923 -1.131554,-6.506447 -1.04977,-1.863557 -3.711592,-0.822475 -4.294772,-2.880327 -0.362538,-1.279283 0.94898,-2.571408 1.903071,-3.497531 2.681727,-2.603116 3.430288,-6.5669181 6.789338,-6.840771 z m -5.169149,14.633072 0,0.797231 c -0.997456,0.02399 -1.478362,0.590447 -1.851639,1.440162 -0.373277,0.849717 -0.528114,1.95962 -0.617213,2.854611 l 0,0.02567 0,0.02567 c -0.158848,0.698032 -0.628306,1.375502 -1.285862,1.723049 -0.01384,0.469595 -0.401415,0.848666 -0.874381,0.848666 -0.48176,0 -0.874383,-0.392622 -0.874383,-0.874385 0,-0.48176 0.392623,-0.874381 0.874383,-0.874381 0.187037,0 0.346602,0.07983 0.488628,0.18001 0.404051,-0.221515 0.695956,-0.658772 0.822947,-1.131554 0.0019,-0.01976 0.04938,-0.0313 0.05143,-0.05143 0.09083,-0.902678 0.207098,-2.068266 0.642928,-3.060344 0.445545,-1.014216 1.296884,-1.871305 2.623155,-1.903067 z m -10.106854,9.592508 6.583596,0 0,0.822948 -6.583596,0 0,-0.822948 z m 14.221597,2.520282 c 0.351649,0 0.642933,0.265558 0.642933,0.617212 0,0.351647 -0.291284,0.64293 -0.642933,0.64293 -0.351646,0 -0.642927,-0.291283 -0.642927,-0.64293 0,-0.351649 0.291281,-0.617212 0.642927,-0.617212 z m 0,7.226525 c 0.351649,0 0.642933,0.291282 0.642933,0.64293 0,0.351649 -0.291284,0.642931 -0.642933,0.642931 -0.351646,0 -0.642927,-0.291282 -0.642927,-0.642931 0,-0.351648 0.291281,-0.64293 0.642927,-0.64293 z m 0,7.252245 c 0.351649,0 0.642933,0.291282 0.642933,0.642928 0,0.351646 -0.291284,0.617216 -0.642933,0.617216 -0.351646,0 -0.642927,-0.265559 -0.642927,-0.617216 0,-0.351646 0.291281,-0.642928 0.642927,-0.642928 z m 13.218631,5.400608 c 0.527468,0 0.951535,0.449785 0.951535,0.977251 0,0.527468 -0.424067,0.951539 -0.951535,0.951539 -0.527471,0 -0.951536,-0.424071 -0.951536,-0.951539 0,-0.527466 0.424065,-0.977251 0.951536,-0.977251 z m -13.218631,1.851635 c 0.351649,0 0.642933,0.265559 0.642933,0.617213 0,0.351647 -0.291284,0.642926 -0.642933,0.642926 -0.351646,0 -0.642927,-0.291279 -0.642927,-0.642926 0,-0.351649 0.291281,-0.617213 0.642927,-0.617213 z m -26.102931,3.240365 c 0.52747,0 0.951537,0.449781 0.951537,0.977249 0,0.527472 -0.424067,0.951537 -0.951537,0.951537 -0.527468,0 -0.951539,-0.424065 -0.951539,-0.951537 0,-0.527468 0.424071,-0.977249 0.951539,-0.977249 z m 11.058385,0.488627 9.052446,0 0,0.822946 -9.052446,0 0,-0.822946 z m 14.813094,0 9.052444,0 0,0.822946 -9.052444,0 0,-0.822946 z m 0.231446,3.497534 c 0.351646,0 0.642928,0.291282 0.642928,0.64293 0,0.351648 -0.291282,0.642927 -0.642928,0.642927 -0.351649,0 -0.642929,-0.291279 -0.642929,-0.642927 0,-0.351648 0.29128,-0.64293 0.642929,-0.64293 z m 0,7.252243 c 0.351646,0 0.642928,0.265559 0.642928,0.617213 0,0.351648 -0.291282,0.642926 -0.642928,0.642926 -0.0958,0 -0.175666,-0.01351 -0.257179,-0.05143 -0.06985,-0.02984 -0.125141,-0.07727 -0.18001,-0.12861 -0.06577,-0.06145 -0.118555,-0.12205 -0.154316,-0.205715 -0.03223,-0.07618 -0.05143,-0.169233 -0.05143,-0.25715 0,-0.09495 0.01434,-0.17623 0.05143,-0.257151 0.03575,-0.08104 0.08856,-0.12205 0.154316,-0.18001 0.115256,-0.101576 0.269283,-0.180039 0.437195,-0.180039 z" fill="#000000" stroke="none"></path></svg>',
            'LongShirt' : '<svg height="26px" width="30px" viewBox="0 0 134 134" enable-background="new 0 0 512 512" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M95,87.7477951l-7.0068817-68.0739899  c-0.3011627-2.9264336-2.0863266-5.0953836-4.7970428-6.2680435L65.3944778,5.703238  c-0.0587616-0.0696239-0.1023788-0.1487422-0.1769638-0.2071614c-0.5836792-0.4584579-1.4301186-0.3558178-1.8885765,0.2299132  C61.5614815,7.982698,56.080513,9.5592461,50.0001297,9.5592461c-6.0797005,0-11.5606689-1.5765481-13.328125-3.8332562  c-0.4584579-0.585731-1.3048973-0.6870027-1.8885765-0.2299132c-0.0744133,0.0583339-0.1180344,0.1371956-0.1767082,0.2067337  l-17.8026257,7.7029495c-2.7127705,1.1739426-4.4943419,3.3289509-4.7970438,6.2684708L5,87.7477951l16.5411797,2.3834686  l4.7331505-50.1433258l0.0337868,54.8024902c14.7351456,0,32.648365,0,47.3835945,0L73.665451,40.1119614l4.7931976,50.0193024  L95,87.7477951z M36.4442291,9.0669165c2.9716797,1.9757318,7.9430389,3.1828613,13.5559006,3.1828613  c5.6130295,0,10.5843887-1.2069588,13.5560684-3.182519C57.7398567,23.9940853,42.2605705,23.9936581,36.4442291,9.0669165z"/></svg>',
            'TShirt' : '<svg height="26px" width="30px" viewBox="0 0 144 144" enable-background="new 0 0 512 512" xml:space="preserve"><path d="M82.505,7.132L64.549,0H64.17C60.688,3.889,55.632,6.34,50,6.34S39.312,3.889,35.826,0h-0.379L17.49,7.132L0,24.241l18.683,14.942l5.545-5.105v56.27H50h25.771v-56.27l5.541,5.105L100,24.241L82.505,7.132z"/> </svg>',
            'Pants' : '<svg height="24px" width="24px" viewBox="0 0 120 120" enable-background="new 0 0 512 512" xml:space="preserve"><path d="M78.1,26.7L77.5,16H67C69.2,21.2,74.6,25.7,78.1,26.7z"/><path d="M32.7,16H22.5l-0.6,10.6C25.4,25.4,30.5,21,32.7,16z"/><path d="M66,12h11.2l-0.3-5.1c0-1.1-0.9-1.9-2-1.9H66V12z"/><path d="M33,5h-7.9c-1.1,0-1.9,0.8-2,1.9L22.8,12H33V5z"/><rect x="37" y="5" width="25" height="7"/><path d="M51,31.9c2.7-0.3,3.9-1.1,4-1.4V16h-4V31.9z"/><path d="M78.4,30.8C72.4,30,65,23.1,62.7,16H58v14.6c0,2.6-3.2,4.3-8.5,4.4l0,0c-0.4,0-0.8-0.2-1-0.4  c-0.3-0.3-0.5-0.7-0.5-1.1V16H36.9c-2.3,6.9-9.4,13.8-15.3,14.7l-3.7,62.1c0,0.6,0.2,1.1,0.5,1.5s0.9,0.6,1.5,0.6h20.8  c1,0,1.9-0.8,2-1.8L48.3,42l0,0c0-0.9,0.7-2,1.6-2h0.3c0.9,0,1.6,1.1,1.6,2l0,0l5.6,51.2c0.1,1,1,1.8,2,1.8h20.8  c0.6,0,1.1-0.2,1.5-0.6s0.6-0.9,0.5-1.5L78.4,30.8z"/>',
            'Shorts' : '<svg height="26px" width="26px" viewBox="0 0 38 38" enable-background="new 0 0 512 512" xml:space="preserve"><path d="M20.504,4.5c0.042,4.767,0.678,7,1.996,7h1c0-2.444-0.608-5.672-0.882-7H22H20.504z"/><rect x="4.5" y="1.5" width="15" height="2"/><path d="M20.5,3.5H22h0.5V2c0-0.276-0.224-0.5-0.5-0.5h-1.5V3.5z"/><path d="M22.5,12.5c-2.537,0-2.968-3.782-2.997-8H12.5V9c0,0.276-0.224,0.5-0.5,0.5S11.5,9.276,11.5,9V4.5H4.497   c-0.029,4.218-0.461,8-2.997,8H0.527c0.152,3.395,0.94,9.291,0.977,9.566C1.538,22.315,1.75,22.5,2,22.5h8   c0.242,0,0.449-0.173,0.492-0.411l1.505-8.311l1.511,8.311C13.551,22.327,13.758,22.5,14,22.5h8c0.25,0,0.462-0.185,0.496-0.434   c0.037-0.275,0.825-6.172,0.977-9.566H22.5z"/><path d="M2,3.5h1.5v-2H2C1.724,1.5,1.5,1.724,1.5,2v1.5H2z"/><path d="M3.496,4.5H2H1.382C1.108,5.828,0.5,9.056,0.5,11.5h1C2.818,11.5,3.454,9.267,3.496,4.5z"/></svg>',
            'Sneakers' : '<svg height="26px" width="30px" viewBox="0 0 32 32" enable-background="new 0 0 512 512" xml:space="preserve"><path d="M24.0331,6.937 C24.0071,6.511 23.7061,6.167 23.3241,6.049 C22.7911,5.496 21.5851,5 18.9691,5 C18.8721,5 18.7811,4.989 18.6861,4.986 L15.7241,11.039 C15.8931,11.044 16.0621,11.05 16.2241,11.05 C19.0051,11.05 20.7411,10.262 21.6811,9.652 C20.8981,11.59 19.1241,12.002 18.8671,12.052 C18.8211,12.06 18.7761,12.071 18.7321,12.085 L18.1921,12.261 C17.9341,12.344 17.7221,12.529 17.6031,12.771 C17.5091,12.964 17.2441,12.956 17.0321,12.911 C16.5331,12.216 15.6591,12.04 14.9601,12.263 C14.6651,12.357 14.4211,12.617 14.3151,12.908 C13.9911,13.103 12.5701,12.525 12.2041,12.179 C11.3911,11.31 9.9281,11.708 9.2621,11.948 C8.2381,12.406 6.8321,12.699 6.0261,12.84 C5.7271,12.493 5.3861,12.333 5.1091,12.261 C4.4971,12.101 3.9291,12.297 3.5441,12.503 C2.1291,12.051 2.0401,11.096 2.0351,11 L2.0351,9.197 C3.2711,9.609 4.0021,9.586 4.1391,9.576 C5.9711,9.357 7.2941,9.411 8.1601,9.515 L12.0031,1.828 C11.7671,1.581 11.6371,1.419 11.6361,1.417 C11.0381,0.583 9.6131,0.206 8.4641,0.574 C7.4181,0.91 6.7871,1.795 6.7681,2.949 C6.6741,2.985 6.4441,3.042 6.0221,3.019 C5.6561,2.809 5.1681,2.479 4.9981,2.254 C4.4171,1.487 2.9691,1.135 2.0121,1.531 C1.3281,1.814 0.9651,2.442 1.0661,3.17 C1.0851,3.308 1.0901,3.405 1.0901,3.469 C1.0081,3.574 -0.0729,5.008 0.0501,6.928 C0.0481,6.953 0.0351,6.975 0.0351,7 L0.0351,11 C0.0351,11.971 0.7611,13.963 3.5051,14.56 C3.7941,14.622 4.1141,14.543 4.3481,14.357 C4.4061,14.312 4.4911,14.263 4.5601,14.233 C4.5681,14.249 4.5761,14.27 4.5851,14.292 C4.7521,14.724 5.2071,14.978 5.6481,14.925 C5.7561,14.911 8.2991,14.57 10.0071,13.803 C10.2541,13.715 10.6461,13.634 10.8471,13.646 C11.3971,14.139 12.8441,14.935 14.1291,14.935 C14.3121,14.935 14.4931,14.918 14.6671,14.883 C15.0351,14.807 15.3561,14.651 15.6181,14.426 C15.7091,14.523 15.8191,14.603 15.9441,14.657 C16.8281,15.045 18.3241,15.154 19.1551,14.051 L19.2881,14.008 C21.1041,13.651 24.3371,11.747 24.0331,6.937"/><path d="M13.5995,10.8311 L16.6155,4.6691 C15.3915,4.3221 14.3655,3.7471 13.5655,3.1761 L10.1505,10.0061 C11.4085,10.4021 12.5545,10.6681 13.5995,10.8311"/></svg>',
            'Boots' : '<svg height="26px" width="30px" viewBox="0 0 120 120" enable-background="new 0 0 512 512" xml:space="preserve"><path fill-rule="evenodd" clip-rule="evenodd" d="M93.583,58.939c-0.181-1.091-1.086-2.538-2.173-2.901  c-1.811-0.722-4.71-1.266-9.055-1.266c-4.163,0-9.96-1.627-15.032-4.168c-0.905-0.361-2.171-0.361-3.079,0  c-1.084,0.544-2.533,1.455-4.344,2.904c-0.18,0.178-0.543,0.178-0.904,0.178c-0.362,0-0.907-0.178-1.267-0.542  c-0.547-0.725-0.365-1.635,0.361-2.177c1.087-0.905,2.171-1.63,3.079-2.171c0.725-0.364,0.725-1.266,0-1.808  c0,0-0.18-0.183-0.364-0.364c-0.723-0.542-1.991-0.725-2.716-0.181c-0.726,0.544-1.631,1.086-2.717,1.811  c-0.361,0.358-0.542,0.358-0.904,0.358c-0.545,0-0.908-0.181-1.27-0.542c-0.542-0.722-0.361-1.811,0.362-2.172  c0.908-0.722,1.812-1.452,2.537-1.816c0.905-0.542,1.447-1.083,1.266-1.266v-0.181c-0.361-0.541-0.543-1.266-0.905-1.991  c-0.18-0.722-1.086-1.083-1.809-0.722c-0.907,0.542-1.812,1.086-2.716,1.811c-0.363,0.361-0.544,0.361-0.907,0.361  c-0.546,0-0.908-0.183-1.269-0.544c-0.543-0.722-0.362-1.811,0.361-2.169c1.27-1.089,2.538-1.819,3.623-2.541  c0.726-0.361,1.269-1.447,1.089-2.355c-0.182-0.358-0.182-0.541-0.363-0.902c-0.182-0.905-0.908-1.264-1.812-0.905  c-1.086,0.725-2.538,1.45-4.347,2.896c-0.18,0.18-0.542,0.18-0.904,0.18c-0.546,0-0.908-0.18-1.27-0.544  c-0.542-0.725-0.361-1.627,0.362-2.172c2.174-1.627,4.165-2.718,5.614-3.443c0.725-0.358,1.268-1.447,1.086-2.352  c-0.542-2.901-0.904-5.431-1.265-7.242c-0.182-1.088-1.09-1.991-2.356-1.63c-1.268,0.364-3.079,1.086-4.528,2.535  c-0.906,0.722-1.268,2.53-1.268,3.623v2.535c0,0-3.624,1.083-12.494,1.083c-9.056-0.181-9.056-0.181-9.056-0.181  s0.362-5.434-2.717-10.499c-0.543-0.911-1.99-1.274-2.899-0.733l-3.258,1.999c-0.905,0.541-1.086,1.808-0.544,2.713  c1.452,2.535,3.261,7.606,1.09,14.667c-1.451,4.712-3.625,7.789-5.434,10.327c64.471,20.465,25.535,11.044-1.629,2.716  c-1.27,2.177-1.994,4.526-1.812,7.783C5.751,65.278,6.84,68.355,6.84,68.355l-0.185,6.52c0,0.725,0.547,1.63,1.451,1.808  c2.356,0.544,7.425,1.447,11.769,0.905c0.729,0,1.451-0.905,1.451-1.811V75.6c0-0.905,0.724-1.63,1.447-1.63h1.452  c0.904,0,1.448,0.542,1.448,1.447v0.905c0,0.725,0.723,1.627,1.449,1.808c1.629,0.369,4.527,0.552,7.606,0  c0.905-0.181,1.629-1.083,1.629-1.808v-0.364c0-0.722,0.542-1.264,1.451-1.083c1.809,0.361,5.43,1.447,7.786,2.713  c0.723,0.542,1.266,1.455,1.266,2.357c0,0.725,0.726,1.449,1.449,1.63c1.991,0.542,5.251,1.086,7.425,0.902  c0.723-0.178,1.268-1.266,1.268-1.988v-0.902c0-0.727,0.726-1.457,1.449-1.457h0.544c0.904,0,1.447,0.73,1.447,1.457v1.444  c0,0.728,0.726,1.811,1.451,1.991c1.627,0.361,4.525,0.903,7.604,0c0.725-0.18,1.448-1.263,1.448-1.991v-1.086  c0-0.903,0.545-1.447,1.45-1.633h0.544c0.724,0,1.45,0.73,1.45,1.452v0.364c0,0.725,0.725,1.447,1.448,1.266  c1.448-0.183,3.442-0.725,5.251-1.63c0.726-0.542,1.267-1.452,1.267-2.177s0.544-1.63,1.448-1.811l1.631-0.361  c0.725-0.361,1.448,0.183,1.448,1.088c0,0.903,0.723,1.444,1.451,1.266c2.17-0.544,5.974-1.813,6.52-5.068  C95.396,69.441,94.308,62.379,93.583,58.939z"/> </svg>',
            'Underwear' : '<svg height="24px" width="24px" viewBox="0 0 90 90" enable-background="new 0 0 512 512" xml:space="preserve"><path d="M78.5,30.52h-61a1.17,1.17,0,0,0-1.17,1.17V44a6.65,6.65,0,0,0,2.9,5.49L33,59h0l5,3.42a17.74,17.74,0,0,0,19.93,0L63,59h0l13.82-9.46A6.66,6.66,0,0,0,79.67,44V31.69A1.17,1.17,0,0,0,78.5,30.52ZM18.67,32.85H77.33V35.4H18.67Zm0,11.19V37.73h24L33.26,56.32,20.55,47.61A4.32,4.32,0,0,1,18.67,44ZM39.35,60.49l-4.14-2.84,10-19.92h5.54l10,19.92-4.14,2.84A15.41,15.41,0,0,1,39.35,60.49ZM77.33,44a4.32,4.32,0,0,1-1.88,3.57L62.74,56.32,53.38,37.73h24Z"/></svg>',
            'Socks' : '<svg height="24px" width="24px" viewBox="0 0 96 96" enable-background="new 0 0 0 0" xml:space="preserve"><path d="M38.507,77.866C38.33,77.806 38.154,77.741 37.981,77.672C36.275,76.992 34.732,75.881 33.57,74.457C32.884,73.616 32.335,72.664 31.952,71.649C31.536,70.547 31.316,69.372 31.302,68.195C31.286,66.895 31.522,65.594 31.996,64.384C32.346,63.49 32.824,62.648 33.411,61.89C33.674,61.551 33.958,61.232 34.26,60.927L44.977,50.209L44.977,21.106L44.988,20.925C44.999,20.866 45.006,20.806 45.021,20.747C45.049,20.629 45.093,20.516 45.149,20.409C45.347,20.032 45.704,19.751 46.118,19.649C46.275,19.611 46.317,19.616 46.477,19.606L64.67,19.606C64.73,19.61 64.79,19.613 64.85,19.617C64.91,19.628 64.97,19.635 65.029,19.649C65.146,19.678 65.26,19.721 65.367,19.778C65.744,19.976 66.024,20.333 66.126,20.747C66.165,20.904 66.16,20.946 66.17,21.106C66.17,22.273 66.17,23.439 66.172,24.606L70.67,24.606C70.73,24.61 70.79,24.613 70.85,24.617C70.91,24.628 70.97,24.635 71.029,24.649C71.146,24.678 71.26,24.721 71.367,24.778C71.744,24.976 72.024,25.333 72.126,25.747C72.165,25.904 72.16,25.946 72.17,26.106C72.17,36.709 72.234,47.311 72.169,57.914C72.163,58.215 72.152,58.516 72.13,58.816C72.128,58.835 72.127,58.853 72.125,58.872C72.124,58.896 72.122,58.92 72.12,58.944C72.111,59.049 72.101,59.154 72.09,59.258L72.09,59.259L72.09,59.261L72.087,59.285L72.086,59.296L72.086,59.3L72.085,59.306L72.084,59.319L72.083,59.326L72.083,59.33L72.082,59.339L72.08,59.352L72.08,59.357L72.079,59.36L72.078,59.374L72.076,59.385L72.076,59.388L72.076,59.39L72.073,59.414L72.073,59.419L72.073,59.419C72.07,59.441 72.067,59.463 72.065,59.485L72.065,59.486L72.065,59.487L72.062,59.512L72.061,59.518L72.061,59.519L72.06,59.521L72.058,59.542L72.057,59.551L72.057,59.552L72.056,59.555L72.054,59.572L72.052,59.584L72.052,59.586L72.052,59.587L72.05,59.602L72.048,59.618L72.048,59.619L72.048,59.62C72.02,59.836 71.987,60.051 71.95,60.266L71.947,60.279L71.946,60.284L71.944,60.295L71.941,60.313L71.939,60.328L71.935,60.35L71.934,60.353L71.933,60.36L71.931,60.371L71.928,60.383L71.926,60.399L71.924,60.407L71.923,60.411C71.89,60.589 71.854,60.767 71.814,60.943C71.476,62.452 70.898,63.904 70.109,65.233L70.109,65.234L70.108,65.235L70.095,65.256L70.086,65.272L70.084,65.275L70.082,65.278L70.073,65.293L70.062,65.311L70.059,65.316L70.057,65.32L70.051,65.33L70.039,65.351L70.035,65.357L70.033,65.36L70.028,65.367L70.014,65.391L70.01,65.398L70.008,65.4L70.006,65.404L69.988,65.433L69.984,65.439L69.984,65.44C69.976,65.453 69.968,65.466 69.96,65.479L69.959,65.48L69.951,65.493L69.938,65.514L69.936,65.517L69.934,65.521L69.924,65.536L69.915,65.551L69.912,65.555L69.908,65.561L69.899,65.575L69.892,65.588L69.888,65.594L69.883,65.602L69.875,65.614L69.869,65.624L69.863,65.632L69.857,65.643L69.85,65.653L69.845,65.66L69.839,65.67L69.831,65.683L69.826,65.691L69.822,65.697L69.814,65.709L69.805,65.723L69.801,65.729L69.799,65.733L69.789,65.748L69.779,65.764L69.776,65.767L69.775,65.769L69.761,65.79L69.752,65.804L69.751,65.805C69.743,65.817 69.735,65.83 69.727,65.843L69.726,65.844L69.72,65.853L69.704,65.877L69.701,65.881L69.699,65.884L69.693,65.892L69.68,65.913L69.675,65.92L69.673,65.924L69.667,65.932L69.655,65.949L69.65,65.956L69.65,65.958L69.648,65.96L69.631,65.985C69.451,66.25 69.262,66.508 69.065,66.759C68.779,67.125 68.476,67.477 68.158,67.816L68.152,67.823L68.146,67.829L68.144,67.831L68.143,67.833C68.11,67.868 68.077,67.902 68.044,67.937L68.038,67.943L68.032,67.949L67.952,68.031C63.929,72.14 59.882,76.226 55.809,80.285C55.493,80.592 55.164,80.883 54.816,81.153C54.799,81.169 54.783,81.184 54.765,81.2C54.683,81.273 54.593,81.337 54.497,81.39C53.639,82.005 52.693,82.496 51.695,82.843C50.236,83.351 48.674,83.548 47.134,83.417C46.054,83.326 44.988,83.074 43.981,82.672C42.275,81.992 40.732,80.881 39.57,79.457C39.166,78.962 38.81,78.429 38.507,77.866ZM41.192,69.624C41.109,69.772 41.032,69.924 40.96,70.079C40.61,70.833 40.396,71.648 40.326,72.476C40.248,73.415 40.356,74.368 40.645,75.264C40.85,75.9 41.146,76.506 41.521,77.059C42.183,78.035 43.092,78.84 44.117,79.419C44.946,79.887 45.857,80.205 46.797,80.356C48.327,80.601 49.916,80.392 51.332,79.764L41.192,69.624ZM69.17,37.256L53.977,37.256L53.977,55.831L53.968,55.999C53.943,56.146 53.942,56.185 53.893,56.326C53.837,56.485 53.755,56.634 53.65,56.766C53.615,56.81 53.575,56.849 53.538,56.891C50.065,60.364 46.572,63.817 43.116,67.305L53.833,78.022C56.426,75.495 58.962,72.909 61.496,70.321C61.409,66.449 61.51,62.575 61.51,58.702C61.514,58.532 61.537,58.367 61.594,58.206C61.734,57.806 62.044,57.478 62.436,57.316C62.593,57.251 62.756,57.218 62.926,57.204C65.006,57.146 67.088,57.134 69.17,57.169L69.17,37.256ZM38.629,68.061L35.192,64.624C35.109,64.772 35.032,64.924 34.96,65.079C34.61,65.833 34.396,66.648 34.326,67.476C34.248,68.415 34.356,69.368 34.645,70.264C34.85,70.9 35.146,71.506 35.521,72.059C36.009,72.779 36.632,73.406 37.337,73.917C37.316,73.677 37.305,73.436 37.302,73.195C37.286,71.895 37.522,70.594 37.996,69.384C38.174,68.928 38.386,68.486 38.629,68.061ZM68.906,60.202L64.51,60.202L64.51,67.243C64.716,67.035 64.922,66.827 65.129,66.62C65.34,66.405 65.552,66.191 65.764,65.977L65.792,65.948L65.805,65.935C66,65.735 66.188,65.53 66.369,65.319C66.664,64.973 66.94,64.612 67.194,64.233C67.812,63.31 68.297,62.299 68.631,61.239C68.732,60.916 68.818,60.588 68.894,60.257L68.895,60.251L68.906,60.202ZM50.977,32.256L47.977,32.256L47.977,50.831L47.968,50.999C47.943,51.146 47.942,51.185 47.893,51.326C47.837,51.485 47.755,51.634 47.65,51.766C47.615,51.81 47.575,51.849 47.538,51.891C44.065,55.364 40.572,58.817 37.116,62.305L40.498,65.688L50.977,55.209L50.977,32.256ZM69.17,34.214L69.17,27.606C64.105,27.606 59.041,27.606 53.977,27.606L53.977,34.253C59.041,34.229 64.108,34.098 69.17,34.214ZM63.17,24.606L63.17,22.606C58.105,22.606 53.041,22.606 47.977,22.606L47.977,29.253C48.977,29.248 49.977,29.239 50.977,29.229L50.977,26.106L50.988,25.925C50.999,25.866 51.006,25.806 51.021,25.747C51.049,25.629 51.093,25.516 51.149,25.409C51.347,25.032 51.704,24.751 52.118,24.649C52.275,24.611 52.317,24.616 52.477,24.606L63.17,24.606Z" style="" fill="black"/></svg>',
            'Toiletries' : '<svg height="24px" width="24px" viewBox="0 0 120 120" enable-background="new 0 0 512 512" xml:space="preserve"><path d="M89.342,23.552c0.577-0.286,0.978-0.871,0.978-1.558v-5.139c0-0.666-0.379-1.236-0.928-1.53l1.231-6.31  c0.194-0.991-0.064-2.007-0.706-2.787C89.274,5.448,88.326,5,87.315,5h-74.63c-1.011,0-1.959,0.448-2.602,1.228  c-0.642,0.78-0.9,1.796-0.706,2.787l1.231,6.31c-0.549,0.295-0.928,0.864-0.928,1.53v5.139c0,0.686,0.402,1.272,0.978,1.558  L7.874,90.615c-0.048,1.157,0.367,2.254,1.168,3.09C9.844,94.54,10.923,95,12.081,95h75.838c1.158,0,2.237-0.46,3.039-1.295  c0.801-0.836,1.217-1.933,1.168-3.09L89.342,23.552z M10.845,6.855c0.454-0.552,1.125-0.869,1.84-0.869h74.63  c0.715,0,1.386,0.317,1.84,0.869c0.455,0.552,0.637,1.27,0.5,1.972l-1.226,6.283H11.571l-1.226-6.283  C10.208,8.126,10.39,7.407,10.845,6.855z M90.246,93.022c-0.614,0.64-1.44,0.992-2.327,0.992H12.081  c-0.887,0-1.713-0.353-2.327-0.992c-0.614-0.64-0.931-1.48-0.895-2.367l2.778-66.915h76.725l2.778,66.915  C91.178,91.541,90.86,92.382,90.246,93.022z"/><path d="M86.835,36.222c-0.026-1.306-0.973-2.398-2.338-2.9l-0.852-5.461c-0.105-0.673-0.692-1.162-1.396-1.162h-3.594  c-0.704,0-1.291,0.488-1.396,1.162l-0.852,5.461c-1.365,0.502-2.312,1.592-2.338,2.891l-2.125,55.039  c-0.007,0.36,0.137,0.71,0.406,0.985c0.339,0.346,0.841,0.544,1.378,0.544h13.52c0.515,0,0.976-0.181,1.298-0.509  c0.273-0.278,0.419-0.641,0.411-1.031L86.835,36.222z M78.234,28.012c0.029-0.187,0.21-0.327,0.421-0.327h3.594  c0.211,0,0.392,0.141,0.421,0.327l0.782,5.009h-0.637H78.09h-0.637L78.234,28.012z M87.843,91.582  c-0.132,0.135-0.349,0.213-0.593,0.213H73.73c-0.27,0-0.521-0.092-0.674-0.248c-0.058-0.06-0.127-0.155-0.125-0.266l2.125-55.039  c0.025-1.232,1.386-2.234,3.034-2.234h4.724c1.648,0,3.009,1.002,3.035,2.243l2.124,55.02C87.975,91.416,87.904,91.52,87.843,91.582  z"/><path d="M69.973,28.194c0-0.689-0.645-1.249-1.439-1.249h-6c-0.793,0-1.439,0.561-1.439,1.249V45.48c0,0.298,0.12,0.563,0.302,0.772  c-0.187,0.243-0.302,0.542-0.302,0.871v42.494c0,0.793,0.645,1.438,1.439,1.438h6c0.793,0,1.439-0.645,1.439-1.438V47.123  c0-0.329-0.115-0.629-0.302-0.871c0.182-0.209,0.302-0.474,0.302-0.772V28.194z M68.986,89.617c0,0.249-0.203,0.452-0.452,0.452h-6  c-0.249,0-0.452-0.202-0.452-0.452V47.123c0-0.249,0.203-0.452,0.452-0.452h6c0.249,0,0.452,0.202,0.452,0.452V89.617z   M68.986,45.48c0,0.113-0.092,0.205-0.206,0.205h-0.247h-6h-0.247c-0.113,0-0.206-0.092-0.206-0.205V28.194  c0-0.121,0.197-0.263,0.452-0.263h6c0.255,0,0.452,0.142,0.452,0.263V45.48z"/><path d="M55.507,83.904h-1.151c-0.275,0-0.517,0.11-0.715,0.271c-0.226-0.168-0.503-0.271-0.805-0.271H25.712  c-0.329,0-0.628,0.123-0.863,0.319c-0.235-0.196-0.534-0.319-0.863-0.319h-6.123c-1.722,0-3.123,1.401-3.123,3.124v2.629  c0,1.722,1.401,3.124,3.123,3.124h6.123c0.329,0,0.628-0.123,0.863-0.319c0.235,0.196,0.534,0.319,0.863,0.319h27.123  c0.303,0,0.579-0.103,0.805-0.271c0.198,0.161,0.44,0.271,0.715,0.271h1.151c0.634,0,1.151-0.516,1.151-1.151v-6.575  C56.658,84.42,56.141,83.904,55.507,83.904z M23.986,91.795h-6.123c-1.178,0-2.137-0.958-2.137-2.137v-2.629  c0-1.179,0.958-2.137,2.137-2.137h6.123c0.204,0,0.37,0.166,0.37,0.37v6.164C24.356,91.629,24.19,91.795,23.986,91.795z   M53.205,91.425c0,0.204-0.166,0.37-0.37,0.37H25.712c-0.204,0-0.37-0.166-0.37-0.37V85.26c0-0.204,0.166-0.37,0.37-0.37h27.123  c0.204,0,0.37,0.166,0.37,0.37V91.425z M55.671,91.63c0,0.091-0.074,0.165-0.164,0.165h-1.151c-0.091,0-0.164-0.074-0.164-0.165  v-0.205V85.26v-0.205c0-0.091,0.074-0.165,0.164-0.165h1.151c0.091,0,0.164,0.074,0.164,0.165V91.63z"/><path d="M32.306,76.122c0.02,0.414-0.118,0.809-0.395,1.095c-0.266,0.286-0.612,0.434-0.986,0.434H14.888  c-0.375,0-0.72-0.148-0.986-0.434c-0.276-0.286-0.414-0.69-0.395-1.095l1.549-26.877c0.039-0.759,0.651-1.361,1.381-1.361h12.94  c0.73,0,1.341,0.602,1.381,1.361L32.306,76.122z"/><path d="M56.658,75.885c0.02,0.523-0.148,1.006-0.473,1.341c-0.237,0.256-0.552,0.404-0.888,0.404H39.713  c-0.335,0-0.651-0.148-0.888-0.404c-0.325-0.335-0.493-0.819-0.473-1.341l1.509-32.824c0.039-0.878,0.631-1.558,1.351-1.558h12.585  c0.72,0,1.312,0.681,1.351,1.558L56.658,75.885z"/><path d="M42.356,86.626v3.432c0,0.414-0.325,0.75-0.73,0.75H27.059c-0.404,0-0.73-0.335-0.73-0.75v-3.432  c0-0.414,0.325-0.75,0.73-0.75h14.568C42.031,85.877,42.356,86.212,42.356,86.626z"/><path d="M68.493,72.848V88.55c0,0.296-0.434,0.533-0.957,0.533h-4.004c-0.523,0-0.957-0.237-0.957-0.533V72.848  c0-0.296,0.434-0.533,0.957-0.533h4.004C68.059,72.315,68.493,72.552,68.493,72.848z"/><path d="M86.661,89.181c0,0.365-0.108,0.7-0.306,0.967c-0.237,0.296-0.572,0.473-0.947,0.473h-9.863  c-0.385,0-0.759-0.187-1.006-0.513c-0.197-0.256-0.296-0.582-0.296-0.917l1.549-51.278c0.03-1.667,1.322-2.979,2.939-2.979h3.442  c1.618,0,2.91,1.312,2.939,2.989L86.661,89.181z"/><path d="M32.591,38.577c-0.021-0.414-0.161-0.785-0.373-1.082l-0.61-3.934h0.002l-0.727-3.41H14.727l-0.484,3.41l-0.644,3.928  c-0.215,0.298-0.357,0.672-0.378,1.088L11.29,77.623c-0.028,0.571,0.164,1.118,0.526,1.499c0.294,0.309,0.677,0.48,1.076,0.48  h20.027c0.4,0,0.782-0.17,1.076-0.48c0.363-0.38,0.554-0.928,0.526-1.499L32.591,38.577z M15.583,31.137h14.502l0.307,1.437H15.379  L15.583,31.137z M15.202,33.56H30.61l0.699,4.508c0.044,0.281-0.03,0.566-0.197,0.761c-0.08,0.094-0.217,0.207-0.409,0.207H15.11  c-0.192,0-0.329-0.113-0.409-0.207c-0.168-0.195-0.241-0.48-0.197-0.762L15.202,33.56z M33.281,78.442  c-0.075,0.079-0.199,0.173-0.362,0.173H12.893c-0.163,0-0.287-0.094-0.362-0.173c-0.175-0.183-0.271-0.471-0.256-0.771l1.879-38.006  c-0.071-0.059-0.141-0.121-0.203-0.194c0.305,0.355,0.716,0.551,1.159,0.551h15.592c0.443,0,0.854-0.196,1.159-0.551  c-0.063,0.073-0.132,0.135-0.203,0.194l1.879,38.006C33.552,77.971,33.456,78.259,33.281,78.442z"/><path d="M57.19,38.577c-0.021-0.414-0.161-0.785-0.373-1.082l-0.61-3.934h0.002l-0.727-3.41H39.326l-0.484,3.41l-0.644,3.928  c-0.215,0.298-0.357,0.672-0.378,1.088l-1.931,39.047c-0.028,0.571,0.164,1.118,0.526,1.499c0.294,0.309,0.677,0.48,1.076,0.48  h20.027c0.4,0,0.782-0.17,1.076-0.48c0.363-0.38,0.554-0.928,0.526-1.499L57.19,38.577z M40.182,31.137h14.502l0.307,1.437H39.978  L40.182,31.137z M39.801,33.56h15.408l0.699,4.508c0.044,0.281-0.03,0.566-0.197,0.761c-0.08,0.094-0.217,0.207-0.409,0.207H39.709  c-0.192,0-0.329-0.113-0.409-0.207c-0.168-0.195-0.241-0.48-0.197-0.762L39.801,33.56z M57.88,78.442  c-0.075,0.079-0.199,0.173-0.362,0.173H37.492c-0.163,0-0.287-0.094-0.362-0.173c-0.175-0.183-0.271-0.471-0.256-0.771l1.879-38.006  c-0.071-0.059-0.141-0.121-0.203-0.194c0.305,0.355,0.716,0.551,1.159,0.551h15.592c0.443,0,0.854-0.196,1.159-0.551  c-0.063,0.073-0.132,0.135-0.203,0.194l1.879,38.006C58.15,77.971,58.055,78.259,57.88,78.442z"/></svg>'
        };

        for (i = 0; i < this.dayInfo.length; i++) {
            var info = this.dayInfo[i];

            var date = '';
            var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

            var highLow = '';
            var cond = '';
            var weatherIcon = '';

            // Putting everything together
            // Date
            var d = new Date(0); // The 0 there is the key, which sets the date to the epoch
            d.setUTCSeconds(info.date_epoch);

            var index = d.getDay();
            index++;

            if (index === 7)
                index = 0;

            date += days[index] + ': ' + (d.getMonth() + 1) + '/' + (d.getDate() + 1);

            // high/low
            highLow += info.high + '/' + info.low;

            // TempIndex
            var tempIndex = info.high;
            tempIndex -= Math.round((info.high - info.tempIndex[0]) / 10);

            // cond
            var cloudAve = (info.cloudCover[0] + info.cloudCover[1]) / 2;
            var high = info.high;
            var willSnow = Math.ceil((info.snow[0] + info.snow[1]) / 2);
            var rainFallMax = info.rainFall[1];

            if (info.rainFall[0] > info.rainFall[1])
                rainFallMax = info.rainFall[0];

            // Matching cond and wear
            var todayWear = {
                "HeavyJacket": false,
                "LightJacket": false,
                "LongShirt": false,
                "TShirt": false,
                "Pants": false,
                "Shorts": false,
                "Sneakers": false,
                "Boots": false
            };

            if (willSnow) {
                weatherIcon = conditions.snow;
                cond = "It may snow";

                if ((rainFallMax > 0.3) && (tempIndex < 40)) {
                    todayWear.HeavyJacket = true;
                    todayWear.Boots = true;

                    bring.HeavyJacket = true;
                    bring.Boots = true;
                } else if (rainFallMax > 0.05) {
                    todayWear.LightJacket = true;
                    todayWear.Sneakers = true;
                    todayWear.Boots = true;

                    bring.LightJacket = true;
                    bring.Sneakers = true;
                    bring.Boots = true;
                }
            } else if (rainFallMax > 0.05) {
                if (rainFallMax > 0.3) {
                    weatherIcon = conditions.rain;
                    cond = "Heavy rain";

                    todayWear.Sneakers = true;
                    todayWear.Boots = true;

                    bring.Sneakers = true;
                    bring.Boots = true;


                    if (tempIndex < 60) {
                        todayWear.HeavyJacket = true;

                        bring.HeavyJacket = true;
                    } else {
                        todayWear.LightJacket = true;

                        bring.LightJacket = true;
                    }
                } else if (rainFallMax > 0.05) {
                    weatherIcon = conditions.lightShowers;
                    cond = "Light rain";

                    todayWear.Sneakers = true;

                    bring.Sneakers = true;

                    if (tempIndex < 60) {
                        todayWear.HeavyJacket = true;

                        bring.HeavyJacket = true;
                    } else {
                        todayWear.LightJacket = true;

                        bring.LightJacket = true;
                    }
                }
            } else if ((cloudAve > 15) && !((info.cloudCover[0] === 0) || (info.cloudCover[1] === 0))) {
                if (cloudAve > 15) {
                    weatherIcon = conditions.partCloudy;
                    cond = "Partly cloudy";
                }
                if (cloudAve > 45) {
                    weatherIcon = conditions.cloudy;
                    cond = "Cloudy";
                }
                if (cloudAve > 85) {
                    weatherIcon = conditions.overcast;
                    cond = "Overcast";
                }
            } else {
                if (high > 95) {
                    weatherIcon = conditions.hot;
                    cond = "Hot day";
                } else {
                    weatherIcon = conditions.sunny;
                    cond = "Clear day";
                }
            }

            // What to pack
            if ((tempIndex < 74) && (tempIndex >= 65)) {
                todayWear.Pants = true;
                todayWear.TShirt = true;
                todayWear.Sneakers = true;

                bring.Pants++;
                bring.TShirt++;
                bring.Sneakers = true;
            } else if ((tempIndex < 65) && (tempIndex >= 55)) {
                todayWear.LightJacket = true;
                todayWear.Pants = true;
                todayWear.LongShirt = true;
                todayWear.Sneakers = true;

                bring.Pants++;
                bring.LongShirt++;
                bring.Sneakers = true;
                bring.LightJacket = true;
            } else if (tempIndex < 55) {
                todayWear.Pants = true;
                todayWear.LongShirt = true;
                todayWear.Sneakers = true;
                todayWear.HeavyJacket = true;

                if (tempIndex < 45) {
                    todayWear.Boots = true;
                    bring.Boots = true;
                }

                bring.HeavyJacket = true;
                bring.Pants++;
                bring.LongShirt++;
                bring.Sneakers = true;
            } else {
                todayWear.Shorts = true;
                todayWear.TShirt = true;
                todayWear.Sneakers = true;

                bring.Shorts++;
                bring.TShirt++;
                bring.Sneakers = true;
            }

            // Forming string
            var wear = '';

            for (var k in todayWear) {
                var val = todayWear[k];

                if (val) {
                    // wear += k + '<br>';

                    var template = '<a class="wearable">' +
                        svgs[k] +
                        '<span>' + k + '</span>' +
                        '</svg>' +
                        '</a>';

                    wear += template + '<br>';
                }
            }

            // Wind
            var windAve = Math.round((info.windSpeed[0] + info.windSpeed[1])/2);

            var large = '' +
                '<div class="grid-item grid-item--width2 grid-item--height2">' +
                '<div class="date">' + date + '</div>' +
                '<div style="height: 128px;">' +
                '<div class="wear" style="vertical-align: middle;">' +
                wear +
                '</div>' +
                '</div>' +
                '<div class="date">Conditions</div>' +
                '<div>' +
                '<div class="leftItem" style="width: 40%; float:left">' +
                '<i class="wi ' + weatherIcon + ' weatherIcon"></i>' +
                '</div>' +

                '<div class="rightItem">' +
                '<div class="infoHolder">' +
                '<div class="dayInfo">High/Low: ' + highLow + '</div>' +
                '<div class="dayInfo">Sunrise: ' + info.sunRise + '</div>' +
                '<div class="dayInfo">Sunset: ' + info.sunSet + '</div>' +
                '<div class="dayInfo">Cond: ' + cond + '</div>' +
                '<div class="dayInfo">Wind high: ' + windAve + 'mph</div>' +
                '</div>' +
                '</div>' +
                '</div>' +
                '</div>';


            $('#grid').append(large);
        }

        var finalTile = '' +
            '<div class="grid-item grid-item--width2 grid-item--height2">'+
                '<div class="date">Total List</div>'+
                '<div style="height: 248px;">'+
                    '<div class="wear" style="height: 250px; text-align: center; align-content: center;">'+
                        '<a class="wearable cr">'+
                            svgs.HeavyJacket +
                            '<span>Heavy Jacket x<b>' + (bring.HeavyJacket ? 1:0) + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.LightJacket +
                            '<span>Light Jacket x<b>' + (bring.LightJacket ? 1:0) + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.LongShirt +
                            '<span>Long Shirt(s) x<b>' + bring.LongShirt + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.TShirt +
                            '<span>TShirt(s) x<b>' + bring.TShirt + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.Pants +
                            '<span>Pants x<b>' + bring.Pants + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.Shorts +
                            '<span>Shorts x<b>' + bring.Shorts + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.Sneakers +
                            '<span>Sneakers x<b>' + (bring.Sneakers ? 1:0) + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.Boots +
                            '<span>Boots x<b>' + (bring.Boots ? 1:0) + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.Underwear +
                            svgs.Socks +
                            '<span>Undies&Socks x<b>' + bring.UnderWearSocks + '</b></span>'+
                        '</a>'+
                        '<a class="wearable cr">'+
                            svgs.Toiletries +
                            '<span>Toiletries</span>'+
                        '</a>'+
                    '</div>'+
                '</div>'+
            '</div>';

        $('#grid').append(finalTile);
    }
}

function LaunchAction (place, days) {
    // Checking place input if zip or city,state
    // Then launch according
    var re = new RegExp('[0-9]{5}');

    if (re.test(place)) {
        actionByZip(place, days);
    } else {
        actionByName(place, days);
    }

    function actionByZip (zip, days) {
        // Using APIXU
        var key = '0b4c01755d3c43d7b78181717171104';

        $.ajax({
            url: 'http://api.apixu.com/v1/forecast.json?key=' + key
            + '&q=' + zip + '&days='+ days + '',
            dataType: 'json',
            success: calculations
        });
    }

    function actionByName (name, days) {
        // Getting zip code by city,state using google maps api
        name.replace(/ /g, '');

        // For latlng
        $.getJSON('http://maps.googleapis.com/maps/api/geocode/json?address=' + name
            + '&sensor=true', function(data) {

            //noinspection JSAnnotator
            try {
                lat = data.results[0].geometry.location.lat;
                lng = data.results[0].geometry.location.lng;

                // For zip
                $.getJSON('http://maps.googleapis.com/maps/api/geocode/json?latlng=' +
                    lat + ',' + lng + '&sensor=true', function (data) {

                    // Zip is either in last or second to last place
                    var zip = data.results[0].address_components[
                    data.results[0].address_components.length-1
                        ].short_name;

                    var re = new RegExp('[0-9]{5}');

                    if (re.test(place)) {
                        actionByZip(place, days);
                    } else {
                        zip = data.results[0].address_components[
                        data.results[0].address_components.length-2
                            ].short_name;

                        actionByZip(place, days);
                    }

                    // Getting forecast with found zip
                    actionByZip(zip, days);
                })
            } catch (error) {
                inputError(true);
            }
        });
    }
}

// Main calculations
function calculations (data) {
        var info = new ForecastObj(data);

        var cityName = 'Your packing list for ' + data.location.name + ', ' + data.location.region;
        $('#packList').text(cityName);

        var cityTODO = 'Stuff to do in ' + data.location.name + ', ' + data.location.region;
        $('#todoList').text(cityTODO);

        info.clearUpInfo(0);

        info.sendToPage();

        // Scrolling up for first query
        if (first) {
            $('#topHide').hide('slow');
            // $('#name').fadeOut('slow');

            $('#slogan').css('padding-top', '20px;');

            $('body').removeClass('stop-scrolling');
            first = false;

            $('#navHolder').hide();
            $('#navHolder').append(''+
                '<nav class="navbar navbar-toggleable-md navbar-light bg-faded fixed-top" id="navBar" style="padding-top: 0px; padding-bottom: 0px;">'+
                '<button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">'+
                '<span class="navbar-toggler-icon"></span>'+
                '</button>'+
                '<a class="navbar-brand" id="topBtn">Sherpa</a>'+
                '<div class="collapse navbar-collapse" id="navbarSupportedContent">'+
                '<ul class="navbar-nav mr-auto">'+
                '<li class="nav-item active" id="packingNavHolder">'+
                '<a class="nav-link disabled" id="packingNav">Packing<span class="sr-only">(current)</span></a>'+
                '</li>'+
                '<li class="nav-item" id="todoNavHolder">'+
                '<a class="nav-link disabled" id="todoNav">Todo</a>'+
                '</li>'+
                '</ul>'+
                '</div>'+
                '<script>'+
                'var scrollRate = 550;'+
                '$("#topBtn").click(function() {'+
                '$("html, body").animate({scrollTop: "0px"}, 700);'+
                'window.location = "#sherpa";});'+
                '$("#packingNav").click(function() {'+
                'if (!$("#packingNav").hasClass("disabled")) {'+
                    '$("li").removeClass("active");'+
                    '$("#packingNavHolder").addClass("active");'+
                    'var offset = $("#packingLocation").offset().top;'+
                    '$("html, body").animate({'+
                        'scrollTop: offset'+
                    '}, scrollRate);'+
                    'window.location = "#packing";'+
                '}'+
                '$("li").removeClass("active");'+
                '$("#packingNavHolder").addClass("active");'+
                '});'+
                '$("#todoNav").click(function() {'+
                'if (!$("#todoNav").hasClass("disabled")) {'+
                    '$("li").removeClass("active");'+
                    '$("#todoNavHolder").addClass("active");'+
                    'var offset = $("#todoLocation").offset().top;'+
                    '$("html, body").animate({'+
                        'scrollTop: offset'+
                    '}, scrollRate);'+
                    'window.location = "#todo";'+
                '}'+
                '$("li").removeClass("active");'+
                '$("#todoNavHolder").addClass("active");'+
                '});'+
                '</script>'+
                '</nav>'
            );

            $('#navHolder').show('slow');

            $('#navBar').append(''+
                '<script>'+
                '$(function() {'+
                'var distancePacking = $("#packingLocation").offset().top,'+
                '$window = $(window);'+
                'var distanceTodo = $("#todoLocation").offset().top,'+
                '$window = $(window);'+
                '$window.scroll(function() {'+
                'if ($window.scrollTop() > distancePacking) {'+
                '$("li").removeClass("active");'+
                '$("#packingNavHolder").addClass("active");'+
                '}'+
                '});'+
                '$window.scroll(function() {'+
                'if ($window.scrollTop() > distanceTodo) {'+
                '$("li").removeClass("active");'+
                '$("#todoNavHolder").addClass("active");'+
                '}'+
                '});'+
                '});'+
                '</script>'
            );

            $('a').removeClass('disabled');
        }
}
